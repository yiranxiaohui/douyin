// Code generated by hertz generator.

package publish

import (
	"context"
	"douyin/biz/config"
	"io"
	"os"

	publish "douyin/biz/model/publish"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// PublishAction .
// @router /douyin/publish/action/ [POST]
func PublishAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req publish.DouyinPublishActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(publish.DouyinPublishActionResponse)

	defer c.JSON(consts.StatusOK, resp)

	getData := req.GetData()
	getToken := req.GetToken()
	getTitle := req.GetTitle()

	out, err := os.Create(config.ServerVideoPath + getToken + getTitle + ".mp4")

	if err != nil {
		resp.StatusMsg = err.Error()
		resp.StatusCode = consts.StatusInternalServerError
		return
	}

	data, err := getData.Open()

	if err != nil {
		resp.StatusMsg = err.Error()
		resp.StatusCode = consts.StatusInternalServerError
		return
	}

	_, err = io.Copy(out, data)

	if err != nil {
		resp.StatusMsg = err.Error()
		resp.StatusCode = consts.StatusInternalServerError
		return
	}

	resp = &publish.DouyinPublishActionResponse{
		StatusCode: consts.StatusOK,
		StatusMsg:  consts.StatusMessage(consts.StatusOK),
	}
}
